


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             AsmTemplate, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000         
    4 00000000         ; sample program makes the 4 LEDs P1.16, P1.17, P1.18, P
                       1.19 go on and off in sequence
    5 00000000         ; (c) Mike Brady, 2011 -- 2019.
    6 00000000         
    7 00000000                 EXPORT           start
    8 00000000         start
    9 00000000         
   10 00000000 E0028018 
                       IO1DIR  EQU              0xE0028018
   11 00000000 E0028014 
                       IO1SET  EQU              0xE0028014
   12 00000000 E002801C 
                       IO1CLR  EQU              0xE002801C
   13 00000000 E0028010 
                       IO1PIN  EQU              0xE0028010  ; address of pins (
                                                            leds)
   14 00000000         
   15 00000000         
   16 00000000 E59F1164        ldr              r1,=IO1DIR
   17 00000004 E3A0280F        ldr              r2,=0x000f0000 ; select P1.19--
                                                            P1.16
   18 00000008 E5812000        str              r2,[r1]     ; make them outputs
                                                            
   19 0000000C E59F115C        ldr              r1,=IO1SET  ; r1 points to the 
                                                            SET register
   20 00000010 E5812000        str              r2,[r1]     ; set them to turn 
                                                            the LEDs off
   21 00000014 E59F2158        ldr              r2,=IO1CLR  ; r2 points to the 
                                                            CLEAR register
   22 00000018 E3A08000        ldr              r8, =0      ; init input val to
                                                             0
   23 0000001C E3A09000        ldr              r9, =0      ; init answer val t
                                                            o 0
   24 00000020 E3A0A000        ldr              r10, =0     ; flag to say first
                                                             input made (1 for 
                                                            made)
   25 00000024 E3A0B000        ldr              r11, =0     ; inc/ dec value fl
                                                            ag
   26 00000028 E3E0C000        ldr              r12, =-1
   27 0000002C EB000046 
                       wloop   bl               pins        ; branch w/ link to
                                                             pins sub
   28 00000030 E1A05000        mov              r5, r0
   29 00000034 E35B0001        cmp              r11, #1
   30 00000038 0A000001        beq              inc
   31 0000003C E3550000        cmp              r5, #0x0
   32 00000040 0AFFFFF9        beq              wloop
   33 00000044 E5813000 
                       inc     str              r3, [r1]    ; set the bit -> tu
                                                            rn off the LED
   34 00000048 E3550008        cmp              r5, #0x00000008 ; rightmost but
                                                            ton pressed (increm
                                                            ent no)
   35 0000004C 0A000008        beq              inc_sub
   36 00000050 E3550004        cmp              r5, #0x00000004 ; 2nd right but
                                                            ton pressed (decrem



ARM Macro Assembler    Page 2 


                                                            ent no)
   37 00000054 0A00000C        beq              dec_sub
   38 00000058 E3550002 
                       ops     cmp              r5, #0x00000002 ; 2nd left butt
                                                            on pressed (+)
   39 0000005C 0A000010        beq              add_sub
   40 00000060 E3550001        cmp              r5, #0x00000001 ; leftmost butt
                                                            on pressed (-)
   41 00000064 0A000012        beq              sub_sub
   42 00000068 EA000019 
                       cont    b                dis_sub
   43 0000006C EAFFFFEE 
                       next    b                wloop
   44 00000070         
   45 00000070 EAFFFFFE 
                       stop    b                stop
   46 00000074         
   47 00000074         ; increment sub - increments inputted value (r8)
   48 00000074 E3A0B001 
                       inc_sub ldr              r11, =1
   49 00000078 E2888001        add              r8, r8, #1  ; increment inputte
                                                            d value
   50 0000007C E3580010        cmp              r8, #16     ; no input values >
                                                             15
   51 00000080 1A000000        bne              incEnd
   52 00000084 E3A08000        ldr              r8, =0      ; reset input if > 
                                                            15
   53 00000088 EAFFFFF2 
                       incEnd  b                ops
   54 0000008C         
   55 0000008C         ; decrement sub - decrements inputted value (r8)
   56 0000008C E3A0B001 
                       dec_sub ldr              r11, =1
   57 00000090 E2488001        sub              r8, r8, #1  ; decrement inputte
                                                            d value
   58 00000094 E3780001        cmp              r8, #-1     ; no negative input
                                                             vals
   59 00000098 1A000000        bne              decEnd
   60 0000009C E3A08000        ldr              r8, =0      ; reset input if < 
                                                            0
   61 000000A0 EAFFFFEC 
                       decEnd  b                ops
   62 000000A4         
   63 000000A4         ; addition sub - performs addition operation
   64 000000A4 E3A0B000 
                       add_sub ldr              r11, =0
   65 000000A8 E0899008        add              r9, r9, r8  ; pushing inputted 
                                                            value into answer
   66 000000AC E3A08000        ldr              r8, =0      ; reset input value
                                                            
   67 000000B0 EA000011        b                dis_ans
   68 000000B4         
   69 000000B4         ; subtract sub - performs subtraction operation
   70 000000B4 E3A0B000 
                       sub_sub ldr              r11, =0
   71 000000B8 E35A0001        cmp              r10, #1
   72 000000BC 0A000001        beq              jump
   73 000000C0 E1A09008        mov              r9, r8
   74 000000C4 EA000000        b                over



ARM Macro Assembler    Page 3 


   75 000000C8 E0499008 
                       jump    sub              r9, r9, r8  ; pushing inputted 
                                                            value into answer
   76 000000CC E3A08000 
                       over    ldr              r8, =0      ; reset input value
                                                            
   77 000000D0 EA000009        b                dis_ans
   78 000000D4         
   79 000000D4         ; display sub - visualisation of inputted number
   80 000000D4 E1A03008 
                       dis_sub mov              r3, r8
   81 000000D8 EB000010        bl               rev_sub
   82 000000DC E1A03000        mov              r3, r0      ; move answer from 
                                                            rev sub to r3
   83 000000E0 E1A03803        mov              r3, r3, lsl #16
   84 000000E4 E5823000        str              r3, [r2]    ; display on leds
   85 000000E8 E59F4088        ldr              r4, =2000000 ; delay for about 
                                                            a half second
   86 000000EC E2544001 
                       dloop   subs             r4, r4, #1
   87 000000F0 1AFFFFFD        bne              dloop
   88 000000F4 E5813000        str              r3, [r1]    ; set the bit -> tu
                                                            rn off the LED
   89 000000F8 EAFFFFDB        b                next
   90 000000FC         
   91 000000FC         ; display answer sub - flashes the answer to the leds fo
                       r ~2 secs
   92 000000FC E35A0001 
                       dis_ans cmp              r10, #1
   93 00000100 1A000004        bne              skip
   94 00000104         ;cmp r9, #0   ; check if negative
   95 00000104         ;bge not_neg
   96 00000104         ;mul r12, r9, r12
   97 00000104         ;orr r12, r12, #0x8
   98 00000104         ;mov r3, r12
   99 00000104         ;ldr r12, =-1
  100 00000104         ;b go
  101 00000104 E1A03009 
                       not_neg mov              r3, r9
  102 00000108 EB000004 
                       go      bl               rev_sub
  103 0000010C E1A03000        mov              r3, r0      ; move answer from 
                                                            rev sub to r3
  104 00000110 E1A03803        mov              r3, r3, lsl #16
  105 00000114 E5823000        str              r3, [r2]    ; display on leds
  106 00000118 E3A0A001 
                       skip    ldr              r10, =1     ; flag set 
  107 0000011C EAFFFFD2        b                next
  108 00000120         
  109 00000120         ; reverse sub - reverses bits in r3, returns in r0
  110 00000120 E92D4018 
                       rev_sub push{r3-r4,      lr}
  111 00000124 E3A00000        ldr              r0, =0      ; init returned val
                                                            
  112 00000128 E3A04000        ldr              r4, =0      ; init counter
  113 0000012C E1B030A3 
                       rloop   movs             r3, r3, lsr #1
  114 00000130 E2A00000        adc              r0, r0, #0
  115 00000134 E2844001        add              r4, r4, #1



ARM Macro Assembler    Page 4 


  116 00000138 E3540004        cmp              r4, #4
  117 0000013C AA000001        bge              rev_fin
  118 00000140 E1A00080        mov              r0, r0, lsl #1
  119 00000144 EAFFFFF8        b                rloop
  120 00000148 E8BD8018 
                       rev_fin pop{r3-r4,       pc}
  121 0000014C         
  122 0000014C         ; pins sub - returns value in r0
  123 0000014C E92D4018 
                       pins    push{r3-r4,      lr}
  124 00000150 E59F3024        ldr              r3,=IO1PIN  ; start with P1.16.
                                                            
  125 00000154 E5933000        ldr              r3, [r3]    ; loading the memor
                                                            y add in r3
  126 00000158 E1E03003        mvn              r3, r3
  127 0000015C E3A0460F        ldr              r4, =0x00f00000
  128 00000160 E0033004        and              r3, r3, r4
  129 00000164 E1A00A23        mov              r0, r3, lsr #20 ; select the ri
                                                            ght bits
  130 00000168 E8BD8018        pop{r3-r4,       pc}
  131 0000016C         
  132 0000016C                 END
              E0028018 
              E0028014 
              E002801C 
              001E8480 
              E0028010 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AsmTemplate 00000000

Symbol: AsmTemplate
   Definitions
      At line 1 in file App.s
   Uses
      None
Comment: AsmTemplate unused
add_sub 000000A4

Symbol: add_sub
   Definitions
      At line 64 in file App.s
   Uses
      At line 39 in file App.s
Comment: add_sub used once
cont 00000068

Symbol: cont
   Definitions
      At line 42 in file App.s
   Uses
      None
Comment: cont unused
decEnd 000000A0

Symbol: decEnd
   Definitions
      At line 61 in file App.s
   Uses
      At line 59 in file App.s
Comment: decEnd used once
dec_sub 0000008C

Symbol: dec_sub
   Definitions
      At line 56 in file App.s
   Uses
      At line 37 in file App.s
Comment: dec_sub used once
dis_ans 000000FC

Symbol: dis_ans
   Definitions
      At line 92 in file App.s
   Uses
      At line 67 in file App.s
      At line 77 in file App.s

dis_sub 000000D4

Symbol: dis_sub
   Definitions
      At line 80 in file App.s
   Uses
      At line 42 in file App.s
Comment: dis_sub used once
dloop 000000EC




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: dloop
   Definitions
      At line 86 in file App.s
   Uses
      At line 87 in file App.s
Comment: dloop used once
go 00000108

Symbol: go
   Definitions
      At line 102 in file App.s
   Uses
      None
Comment: go unused
inc 00000044

Symbol: inc
   Definitions
      At line 33 in file App.s
   Uses
      At line 30 in file App.s
Comment: inc used once
incEnd 00000088

Symbol: incEnd
   Definitions
      At line 53 in file App.s
   Uses
      At line 51 in file App.s
Comment: incEnd used once
inc_sub 00000074

Symbol: inc_sub
   Definitions
      At line 48 in file App.s
   Uses
      At line 35 in file App.s
Comment: inc_sub used once
jump 000000C8

Symbol: jump
   Definitions
      At line 75 in file App.s
   Uses
      At line 72 in file App.s
Comment: jump used once
next 0000006C

Symbol: next
   Definitions
      At line 43 in file App.s
   Uses
      At line 89 in file App.s
      At line 107 in file App.s

not_neg 00000104

Symbol: not_neg
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 101 in file App.s
   Uses
      None
Comment: not_neg unused
ops 00000058

Symbol: ops
   Definitions
      At line 38 in file App.s
   Uses
      At line 53 in file App.s
      At line 61 in file App.s

over 000000CC

Symbol: over
   Definitions
      At line 76 in file App.s
   Uses
      At line 74 in file App.s
Comment: over used once
pins 0000014C

Symbol: pins
   Definitions
      At line 123 in file App.s
   Uses
      At line 27 in file App.s
Comment: pins used once
rev_fin 00000148

Symbol: rev_fin
   Definitions
      At line 120 in file App.s
   Uses
      At line 117 in file App.s
Comment: rev_fin used once
rev_sub 00000120

Symbol: rev_sub
   Definitions
      At line 110 in file App.s
   Uses
      At line 81 in file App.s
      At line 102 in file App.s

rloop 0000012C

Symbol: rloop
   Definitions
      At line 113 in file App.s
   Uses
      At line 119 in file App.s
Comment: rloop used once
skip 00000118

Symbol: skip
   Definitions
      At line 106 in file App.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 93 in file App.s
Comment: skip used once
start 00000000

Symbol: start
   Definitions
      At line 8 in file App.s
   Uses
      At line 7 in file App.s
Comment: start used once
stop 00000070

Symbol: stop
   Definitions
      At line 45 in file App.s
   Uses
      At line 45 in file App.s
Comment: stop used once
sub_sub 000000B4

Symbol: sub_sub
   Definitions
      At line 70 in file App.s
   Uses
      At line 41 in file App.s
Comment: sub_sub used once
wloop 0000002C

Symbol: wloop
   Definitions
      At line 27 in file App.s
   Uses
      At line 32 in file App.s
      At line 43 in file App.s

26 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO1CLR E002801C

Symbol: IO1CLR
   Definitions
      At line 12 in file App.s
   Uses
      At line 21 in file App.s
Comment: IO1CLR used once
IO1DIR E0028018

Symbol: IO1DIR
   Definitions
      At line 10 in file App.s
   Uses
      At line 16 in file App.s
Comment: IO1DIR used once
IO1PIN E0028010

Symbol: IO1PIN
   Definitions
      At line 13 in file App.s
   Uses
      At line 124 in file App.s
Comment: IO1PIN used once
IO1SET E0028014

Symbol: IO1SET
   Definitions
      At line 11 in file App.s
   Uses
      At line 19 in file App.s
Comment: IO1SET used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file App.s
   Uses
      None
Comment: main unused
1 symbol
366 symbols in table
